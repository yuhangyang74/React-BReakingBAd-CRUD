{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/CRUD/react-crud/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport api from '../apis/bbBaseUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    const getAllCharacters = async () => {\n      const allCharacters = await retrieveCharacters();\n      if (allCharacters) setCharacters(allCharacters);\n    };\n\n    getAllCharacters();\n  }, []); //Retrieve character list from initial.\n\n  const retrieveCharacters = async () => {\n    const response = await api.get('/characters');\n    return response.data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: characters\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/johnny/CRUD/react-crud/src/components/App.js"],"names":["useState","useEffect","api","App","characters","setCharacters","getAllCharacters","allCharacters","retrieveCharacters","response","get","data"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,gBAAgB,GAAG,YAAY;AACnC,YAAMC,aAAa,GAAG,MAAMC,kBAAkB,EAA9C;AACA,UAAID,aAAJ,EAAmBF,aAAa,CAACE,aAAD,CAAb;AACpB,KAHD;;AAKAD,IAAAA,gBAAgB;AACjB,GAPQ,EAON,EAPM,CAAT,CAHa,CAYb;;AACA,QAAME,kBAAkB,GAAG,YAAY;AACrC,UAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAJ,CAAQ,aAAR,CAAvB;AAEA,WAAOD,QAAQ,CAACE,IAAhB;AACD,GAJD;;AAMA,sBAAO;AAAA,cAAMP;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GApBQD,G;;KAAAA,G;AAsBT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport api from '../apis/bbBaseUrl';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    const getAllCharacters = async () => {\n      const allCharacters = await retrieveCharacters();\n      if (allCharacters) setCharacters(allCharacters);\n    };\n\n    getAllCharacters();\n  }, []);\n\n  //Retrieve character list from initial.\n  const retrieveCharacters = async () => {\n    const response = await api.get('/characters');\n\n    return response.data;\n  };\n\n  return <div>{characters}</div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}