[{"/Users/johnny/CRUD/react-crud/src/index.js":"1","/Users/johnny/CRUD/react-crud/src/components/App.js":"2","/Users/johnny/CRUD/react-crud/src/apis/bbBaseUrl.js":"3","/Users/johnny/CRUD/react-crud/src/components/CharacterList.js":"4","/Users/johnny/CRUD/react-crud/src/components/CharacterCard.js":"5","/Users/johnny/CRUD/react-crud/src/components/CreateCharacter.js":"6"},{"size":157,"mtime":1642064177382,"results":"7","hashOfConfig":"8"},{"size":783,"mtime":1642076846095,"results":"9","hashOfConfig":"8"},{"size":112,"mtime":1642064174845,"results":"10","hashOfConfig":"8"},{"size":523,"mtime":1642073391228,"results":"11","hashOfConfig":"8"},{"size":1320,"mtime":1642077461685,"results":"12","hashOfConfig":"8"},{"size":163,"mtime":1642076909900,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"go042s",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/johnny/CRUD/react-crud/src/index.js",[],["29","30"],"/Users/johnny/CRUD/react-crud/src/components/App.js",[],"/Users/johnny/CRUD/react-crud/src/apis/bbBaseUrl.js",[],"/Users/johnny/CRUD/react-crud/src/components/CharacterList.js",["31"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport CharacterCard from './CharacterCard';\n\nconst CharacterList = ({ value }) => {\n  // console.log(value);\n\n  if (!value) {\n    return <h1>Loading...</h1>;\n  }\n\n  const renderList = value.map((item) => {\n    // console.log(item.char_id);\n    return <CharacterCard value={item} key={item.char_id} />;\n  });\n\n  return (\n    <div className=\"main\">\n      <div className=\"ui celled list\">{renderList}</div>\n    </div>\n  );\n};\n\nexport default CharacterList;\n","/Users/johnny/CRUD/react-crud/src/components/CharacterCard.js",["32","33","34","35","36","37"],"import React from 'react';\nimport './CharacterCards.css';\n// import { Link } from 'react-router-dom';\n\nconst CharacterCard = ({ value }) => {\n  const {\n    name,\n    birthday,\n    img,\n    occupation,\n    status,\n    appearance,\n    nickname,\n    portrayed,\n  } = value;\n  // return <div id={value.char_id}>card{value.char_id}</div>;\n  return (\n    <div className=\"ui link cards\">\n      <div className=\"card\">\n        <div className=\"image\">\n          <img src=\"img\" />\n        </div>\n        <div className=\"content\">\n          <a className=\"header\">{name}</a>\n          <div className=\"meta\">\n            <span className=\"date\">{birthday}</span>\n          </div>\n          <div className=\"description\">\n            <span>Ocup: </span>\n            {occupation[0]}\n          </div>\n          <div className=\"description center\">{portrayed}</div>\n        </div>\n        <div className=\"extra content\">\n          <a>\n            <i className=\"user icon\"></i>\n            Status: {status}\n          </a>\n        </div>\n        <div className=\"extra content\">\n          <div className=\"ui two buttons\">\n            <div className=\"ui basic green button\">Update</div>\n            <div className=\"ui basic red button\">Delete</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CharacterCard;\n","/Users/johnny/CRUD/react-crud/src/components/CreateCharacter.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":14},{"ruleId":"42","severity":1,"message":"46","line":9,"column":5,"nodeType":"44","messageId":"45","endLine":9,"endColumn":8},{"ruleId":"42","severity":1,"message":"47","line":12,"column":5,"nodeType":"44","messageId":"45","endLine":12,"endColumn":15},{"ruleId":"42","severity":1,"message":"48","line":13,"column":5,"nodeType":"44","messageId":"45","endLine":13,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":21,"column":11,"nodeType":"51","endLine":21,"endColumn":28},{"ruleId":"52","severity":1,"message":"53","line":24,"column":11,"nodeType":"51","endLine":24,"endColumn":33},{"ruleId":"52","severity":1,"message":"53","line":35,"column":11,"nodeType":"51","endLine":35,"endColumn":14},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'img' is assigned a value but never used.","'appearance' is assigned a value but never used.","'nickname' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]